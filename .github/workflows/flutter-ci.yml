name: Setup Flutter

on:
  push:
    branches: [main, "feature/*"]
  pull_request:
    branches: [main]

jobs:
  analyze:
    name: Analyze and Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Clear Cache
        run: |
          echo "Clearing existing Flutter cache..."
          rm -rf ~/.pub-cache
          mkdir -p ~/.pub-cache/bin

      - name: Setup Flutter
        run: |
          if ! [ -x "$(command -v flutter)" ]; then
            echo "Reinstalling Flutter..."
            git clone --depth 1 -b stable https://github.com/flutter/flutter.git ~/.pub-cache/flutter
            ln -sf ~/.pub-cache/flutter/bin/flutter ~/.pub-cache/bin/flutter
          fi
          echo "Flutter setup completed."

      - name: Verify Flutter Installation
        run: |
          flutter doctor -v || echo "Flutter is not functioning properly"
          which flutter || echo "Flutter binary not found in PATH"
          echo $PATH
          ls -l ~/.pub-cache 

      - name: Ensure .pub-cache and binary installation
        run: |
          mkdir -p ~/.pub-cache/bin
          if ! [ -x "$(command -v flutter)" ]; then
          echo "Installing Flutter manually..."
          git clone --depth 1 -b stable https://github.com/flutter/flutter.git ~/.pub-cache/flutter
          ln -s ~/.pub-cache/flutter/bin/flutter ~/.pub-cache/bin/flutter
          fi
          echo "Flutter binary setup completed"

      - name: Ensure .pub-cache directory exists
        run: mkdir -p ~/.pub-cache

      - name: Ensure Flutter Binary is Available
        run: |
          if [ ! -f ~/.pub-cache/bin/flutter ]; then
            echo "Flutter binary missing, attempting to reinstall..."
            flutter doctor -v || echo "Flutter is not functioning properly"
          else
            echo "Flutter binary found."
          fi  

      - name: Verify Cache Integrity
        run: |
          echo "Verifying Flutter cache integrity..."
          ls -la ~/.pub-cache/bin
          flutter pub cache repair || echo "Cache repair failed"

      - name: Debug Flutter Installation and PATH
        run: |
          echo "Checking Flutter installation..."
          which flutter || echo "Flutter binary not found in PATH"
          echo $PATH
          ls -l ~/.pub-cache
          if [ -f ~/.pub-cache/bin/flutter ]; then
            echo "Flutter binary found in cache"
          else
            echo "Flutter binary not found in cache"
            exit 1
          fi
          flutter doctor -v || echo "Flutter is not functioning as expected"

      - name: Debug PATH and Flutter
        run: |
          echo $PATH
          ls -l ~/.pub-cache  

      - name: Clean and upgrade dependencies
        run: |
          flutter pub upgrade
          flutter pub cache repair
          flutter clean

      - name: Upgrade Dependencies with Retry
        run: |
          n=0
          until [ "$n" -ge 5 ]
          do
            flutter pub upgrade && break
            n=$((n+1))
            echo "flutter pub upgrade 재시도 중... ($n)"
            sleep $((2**n))
          done
          if [ "$n" -ge 5 ]; then
            echo "flutter pub upgrade가 5회 시도 후에도 실패했습니다."
            exit 1
          fi

      - name: Install dependencies
        run: flutter pub get

      - name: Verify formatting
        run: dart format --set-exit-if-changed .

      - name: Analyze project source
        run: flutter analyze

      - name: Run tests
        run: |
          if [ -d "test" ]; then
            flutter test;
          else
            echo "No tests directory found, skipping tests.";
          fi

  build_android:
    name: Build Android APK
    needs: analyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.29.3"
          channel: "stable"
          cache-key: flutter-linux-${{ runner.os }}-${{ hashFiles('pubspec.yaml') }}
          cache-path: ~/.pub-cache

      - name: Install dependencies
        run: flutter pub get

      - name: Build APK
        run: flutter build apk --release