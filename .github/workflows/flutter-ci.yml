name: Setup Flutter

on:
  push:
    branches: [main, "feature/*"]
  pull_request:
    branches: [main]

jobs:
  analyze:
    name: Analyze and Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      # 1. Flutter 설치/환경/캐시 셋업
      - name: Setup Flutter Cache and Environment
        run: |
          echo "Setting up Flutter environment..."
          export PUB_CACHE="$HOME/.pub-cache"
          rm -rf $PUB_CACHE
          mkdir -p $PUB_CACHE/bin
          git clone --depth 1 -b stable https://github.com/flutter/flutter.git $PUB_CACHE/flutter
          ln -sf $PUB_CACHE/flutter/bin/flutter $PUB_CACHE/bin/flutter
          export PATH="$PUB_CACHE/bin:$PATH"
          echo "PATH: $PATH"

          if ! flutter doctor -v; then
            echo "Flutter setup failed"; exit 1
          fi

      - name: Debug Environment
        run: |
          echo "Debugging environment..."
          echo "PATH: $PATH"
          which flutter || echo "Flutter binary not found in PATH"
          ls -la $HOME/.pub-cache

      # 2. 의존성 업그레이드(재시도 포함, 캐시도 같이 정리)
      - name: Upgrade Dependencies with Retry
        run: |
          echo "Upgrading dependencies..."
          export PUB_CACHE="$HOME/.pub-cache"
          export PATH="$PUB_CACHE/bin:$PATH"

          echo "Clearing existing cache and resetting..."
          rm -rf $PUB_CACHE
          mkdir -p $PUB_CACHE/bin
          git clone --depth 1 -b stable https://github.com/flutter/flutter.git $PUB_CACHE/flutter
          ln -sf $PUB_CACHE/flutter/bin/flutter $PUB_CACHE/bin/flutter

          echo "Validating Flutter setup..."
          if ! flutter doctor -v; then
              echo "Flutter setup failed"; exit 1
          fi

          echo "Attempting to upgrade dependencies..."
          for i in {1..10}; do
              if flutter pub upgrade --force; then
                  echo "Dependencies upgraded successfully."
                  break
              else
                  echo "Retrying flutter pub upgrade... (attempt $i)"
                  sleep $((2**i))  # Exponential backoff
              fi
          done

          if [ $? -ne 0 ]; then
              echo "flutter pub upgrade failed after 10 attempts."
              exit 1
          fi

      # 3. 의존성 설치 (pub get)
      - name: Install dependencies
        run: |
          export PATH="$HOME/.pub-cache/bin:$PATH"
          flutter pub get

      # 4. 캐시·링크·환경 검증
      - name: Verify Cache and Links
        run: |
          echo "Verifying cache integrity..."
          ls -la ~/.pub-cache
          ls -la ~/.pub-cache/bin
          ls -la ~/.pub-cache/flutter/bin
          which flutter

      # 5. 클린 빌드
      - name: Clean build
        run: |
          export PATH="$HOME/.pub-cache/bin:$PATH"
          flutter clean

      # 6. 포맷 검사
      - name: Verify formatting
        run: |
          export PATH="$HOME/.pub-cache/bin:$PATH"
          dart format --set-exit-if-changed .

      # 7. 코드 분석
      - name: Analyze project source
        run: |
          export PATH="$HOME/.pub-cache/bin:$PATH"
          flutter analyze

      # 8. 테스트 실행
      - name: Run tests
        run: |
          export PATH="$HOME/.pub-cache/bin:$PATH"
          if [ -d "test" ]; then
            flutter test;
          else
            echo "No tests directory found, skipping tests.";
          fi

      # 9. 디버그 (실패시만)
      - name: Debug (If needed)
        if: ${{ failure() }}
        run: |
          echo "DEBUG INFO"
          which flutter || echo "Flutter binary not found in PATH"
          echo $PATH
          flutter doctor -v
          ls -la ~/.pub-cache
          ls -la ~/.pub-cache/bin
          ls -la ~/.pub-cache/flutter/bin

  build_android:
    name: Build Android APK
    needs: analyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.29.3"
          channel: "stable"
          cache-key: flutter-linux-${{ runner.os }}-${{ hashFiles('pubspec.yaml') }}
          cache-path: ~/.pub-cache

      - name: Install dependencies
        run: flutter pub get

      - name: Build APK
        run: flutter build apk --release